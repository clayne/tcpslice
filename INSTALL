@(#) $Header: INSTALL,v 1.2 97/01/23 22:25:56 leres Exp $ (LBL)

If you have not built libpcap, do so first.  See the README file in
this directory for the ftp location.

You will need an ANSI C compiler to build tcpslice. The configure
script will abort if your compiler is not ANSI compliant. If this
happens, use the GNU C compiler, available via anonymous ftp:

	ftp://prep.ai.mit.edu/pub/gnu/gcc.tar.gz

After libpcap has been built (either install it with "make install" and
"make install-incl" or make sure both the libpcap and tcpslice source
trees are in the same directory), edit the BINDEST and MANDEST paths in
Makefile.in and run ./configure (a shell script).  "configure" will
determine your system attributes and generate an appropriate Makefile
from Makefile.in.  Now build tcpslice by running "make".

If everything builds ok, su and type "make install" (and optionally
"make install-man). This will install tcpslice and the manual entry.

If your system is not one which we have tested tcpslice on, you may
have to modify the configure script and Makefile.in. Please send us
patches for any modifications you need to make.

FILES
-----
CHANGES         - description of differences between releases
FILES		- list of files exported as part of the distribution
INSTALL         - this file
Makefile.in	- compilation rules (input to the configure script)
README		- description of distribution
VERSION		- version of this release
aclocal.m4	- autoconf macros
config.guess	- autoconf support
config.sub	- autoconf support
configure	- configure script (run this first)
configure.in	- configure script source
gmt2local.c	- time conversion routines
gmt2local.h	- time conversion prototypes
gwtm2secs.c	- GMT to Unix timestamp conversion
install-sh	- BSD style install script
lbl/gnuc.h	- gcc macros and defines
lbl/os-*.h	- os dependent defines and prototypes
machdep.c	- machine dependent routines
machdep.h	- machine dependent definitions
mkdep		- construct Makefile dependency list
search.c	- fast savefile search routines
tcpslice.1	- manual entry
tcpslice.c	- main program
tcpslice.h	- global prototypes
util.c		- utility routines
vfprintf.c	- emulation routine
